name: CI

on:
  schedule:
    - cron: '2 2 * * *'
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    name: "Build ${{ matrix.image.repo }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - repo: vladgh/gpg
            path: gpg
            platform: linux/amd64
            mb_token: Sg_CkaULmDjZ0K3u5W1mIqXlkOk=
          - repo: vladgh/minidlna
            path: minidlna
            platform: linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64/v8
            mb_token: Qr9rUtKpdDGoUVh3tGwGTBzSmQ8=
          - repo: vladgh/s3sync
            path: s3sync
            platform: linux/amd64
            mb_token: eB40MYq66N9GQvIisktwJVOL_tw=
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Docker Metadata
        uses: docker/metadata-action@v3.3.0
        id: meta
        with:
          images: ${{ matrix.image.repo }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v1.3.0
      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2.5.0
        with:
          context: ${{ matrix.image.path }}
          platforms: ${{ matrix.image.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
      - name: Notify MicroBadger
        if: github.event_name != 'pull_request'
        run: curl --request POST --silent --fail "https://hooks.microbadger.com/images/${{ matrix.image.repo }}/${{ matrix.image.mb_token }}"
